#
#=== Profile consistency checks: OPS comparison with deliberately wrong values ===#
#
#This is used to cover code paths that would otherwise be missed.
#It is recommended to run this test with OOPS_DEBUG=0 due to the large amount of output generated.

#Some of the OPS variables have been given wrong values, and
#one of the variables is missing. These changes are designed to fail
#the checks that (1) the code values are the same as the OPS equivalents,
#and (2) all required variables are present.
Incorrect and missing values, RH:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_rh_wrong.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, relative_humidity, dew_point_temperature]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Basic", "SamePDiffT", "Sign", "UnstableLayer", "Interpolation", "Hydrostatic", "RH", "UInterp", "Time", "PermanentReject", "BackgroundTemperature", "BackgroundRelativeHumidity", "BackgroundWindSpeed", "BackgroundGeopotentialHeight"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true

#One of the variables is missing in a different sample (for completeness).
Incorrect and missing values:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile_wrong.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Basic", "SamePDiffT", "Sign", "UnstableLayer", "Interpolation", "Hydrostatic", "RH", "UInterp", "Time", "PermanentReject", "BackgroundTemperature", "BackgroundRelativeHumidity", "BackgroundWindSpeed", "BackgroundGeopotentialHeight"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true

#One of the variables is missing, basic check is run.
Incorrect and missing values, Basic:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile_wrong.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Basic"]
    compareWithOPS: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true

#All ObsValue variables are given one value per profile.
#This is designed to fail the check that all variables are the same size.
Wrong number of entries per profile:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["SamePDiffT", "Basic", "Sign", "UnstableLayer", "Interpolation", "Hydrostatic"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    groups_singlevalue: ["Counters", "ObsValue"]
  BypassMismatchComparison: true

#UInterp: all ObsValue variables are given one value per profile.
#This is designed to fail the check that all variables are the same size.
Wrong number of entries per profile, UInterp:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_uinterp.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [eastward_wind, northward_wind]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["UInterp"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    groups_singlevalue: ["Counters", "ObsValue"]
  BypassMismatchComparison: true

#RH: all ObsValue variables are given one value per profile.
#This is designed to fail the check that all variables are the same size.
Wrong number of entries per profile, RH:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_rh.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, relative_humidity, dew_point_temperature]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["RH"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    groups_singlevalue: ["Counters", "ObsValue"]
  BypassMismatchComparison: true

#Background: all ObsValue variables are given one value per profile.
#This is designed to fail the check that all variables are the same size.
Wrong number of entries per profile, background:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_bkgqc_repobs.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [eastward_wind, northward_wind]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Time", "PermanentReject", "BackgroundTemperature", "BackgroundRelativeHumidity", "BackgroundWindSpeed", "BackgroundGeopotentialHeight"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    groups_singlevalue: ["Counters", "ObsValue", "MetaData"]
  BypassMismatchComparison: true

#A group variable is not chosen, throwing an exception
No group variable chosen:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_rh.nc4
    simulated variables: [air_temperature, relative_humidity, dew_point_temperature]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["RH"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  ExpectThrowOnInstantiation: true

#An ascending sort order is chosen, throwing an exception
Ascending sort order:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_rh.nc4
      obsgrouping:
        group variable: "station_id"
        sort variable: "air_pressure"
        sort order: "ascending"
    simulated variables: [air_temperature, relative_humidity, dew_point_temperature]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["RH"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  ExpectThrowDuringOperation: true

#An invalid check is requested, throwing an exception
Invalid check requested:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_rh.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, relative_humidity, dew_point_temperature]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["WrongCheck"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  ExpectThrowDuringOperation: true

#A duplicate check is requested, throwing an exception
Duplicate check requested:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Sign"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  AddDuplicateCheck: true

#An incorrect type is used in the 'get' function, throwing an exception
Incorrect type in get:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Sign"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  GetWrongType: true

#The standard levels (for the hydrostatic check) are out of order, throwing an exception
Standard levels out of order:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_oneprofile.nc4
      obsgrouping:
        group variable: "station_id"
        sort variable: "air_pressure"
        sort order: "descending"
    simulated variables: [air_temperature, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Hydrostatic"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    StandardLevels: [1, 1000]
  BypassMismatchComparison: true
  ExpectThrowDuringOperation: true

#Time: set SondeLaunchWindRej to a nonzero value
Background SondeLaunchWindRej:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_bkgqc_repobs.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [eastward_wind, northward_wind]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Time"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
    TimeCheck_SondeLaunchWindRej: 100.0
  BypassMismatchComparison: true

#Manually set QC flags
Background manual QC flags:
  window begin: 2000-01-01T00:00:00Z
  window end: 2030-01-01T00:00:00Z
  obs space:
    name: Radiosonde
    obsdatain:
      obsfile: Data/met_office_profile_consistency_checks_bkgqc_repobs.nc4
      obsgrouping:
        group variable: "station_id"
    simulated variables: [air_temperature, relative_humidity, eastward_wind, northward_wind, geopotential_height]
  obs diagnostics:
  ProfileConsistencyChecks:
    Checks: ["Time"]
    compareWithOPS: true
    BChecks_Skip: true
    flagBasicChecksFail: true
    Comparison_Tol: 0.1
  BypassMismatchComparison: true
  ManualFlagModification: true
